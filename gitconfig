[color]
  ui = true
[alias]
  a = "add"
  ai = "add -i"
  b = "branch"
  s = "status"
  d = "diff"
  c = "commit"
  ca = "commit --amend"
  cv = "commit --no-verify"
  can = "commit --amend --no-edit"
  cav = "commit --amend --no-verify"
  canv = "commit --amend --no-edit --no-verify"
  co = "checkout"
  cob = "checkout -b"
  cog = !"git for-each-ref --format='%(refname:short)' 'refs/heads/*' | rg -i $@ | xargs git checkout #"
  sha = "rev-parse"
  r = "rebase"
  ri = "rebase -i"
  default = !"git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'"
  um = !"default=$(git default); git fetch origin $default:$default"
  pushf = "push --force-with-lease"
  pub = !"git push -u origin $(git rev-parse --abbrev-ref HEAD)"
  pd = "push --no-verify -d origin"
  mbm = !"git merge-base origin/$(git default) HEAD"
  scary = !"git fetch && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)"
  forget = "update-index --skip-worktree"
  remember = "update-index --no-skip-worktree"
  hide = !"git remember $1; git stash push -m $1 -- $1"
  return = !"git stash pop -q $(git stash list | grep $1 | cut -d: -f1); git forget"
  destroy = !"git pd $@ && git branch -D"
  gone = !"git remote prune origin; git branch --merged | grep -Ev \"(\\*|master)\" | xargs git branch -d"
  # Filter down just to matching files, then grep within those files. This isn't
  # perfect because it will also include files where the matching string was
  # removed, but I think it's the best we can do.
  diff-grep = !"git diff `git mbm` --diff-filter ACMR -G $1 | rg '^[+]' | rg -e \"^[+]{3} b/.*$\" -C3 -e $1 #"
  dg = "diff-grep"
  todo = "diff-grep [Tt][Oo][Dd][Oo]"
  gh = !"open `fish -c git_repo_url`"
  pr = !"fish -c open_pr"
  l = log --oneline --decorate --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
  lm = !"git l `git default` HEAD"
  lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  msg = log --format=%B -n 1
[user]
  email = lucas@lucaspickering.me
  name = Lucas Pickering
[core]
  editor = vim
[fetch]
  recurseSubmodules = false
[push]
  default = simple
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[includeIf "gitdir:~/git/KeyCaliber/"]
  path = ~/git/config/KeyCaliber.gitconfig
[pull]
  ff = only
[init]
  defaultBranch = master
